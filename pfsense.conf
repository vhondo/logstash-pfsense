input {
  syslog {
    port => 5051 
    tags => ["pfsense"]
  }
}

filter {
  if "pfsense" in [tags] {
    if [process][name] == "filterlog" {
      grok {
        match => { "message" => "(%{INT:rule-number}|),(?:%{INT:sub-rule-number}|),(?:%{WORD:anchor}|),(?:%{INT:tracker}|),(?:%{WORD:real-interface}|),(?:%{WORD:reason}|),(?:%{WORD:action}|),(?:%{WORD:direction}|),(?:%{INT:ip-version}|),(?:%{WORD:tos}|),(?:%{WORD:ecn}|),(?:%{INT:ttl}|),(?:%{INT:id}|),(?:%{INT:offset}|),(?:%{WORD:flags}|),(?:%{WORD:protocol-id}|),(?:%{WORD:protocol-text}|),(?:%{GREEDYDATA:proto-data}|)" }
        remove_field => ["data"]
        add_tag => ["filterlog"]
      }
      if [protocol-text] == "udp" {
        grok {
          match => { "proto-data" => "(?:%{INT:length}|),(?:%{IP:source-address}|),(?:%{IP:destination-address}|),(?:%{INT:source-port}|),(?:%{INT:destination-port}|),(?:%{INT:data-length}|)" }
          remove_field => ["proto-data"]
          add_tag => ["udp_proto_data_parsed"]
        }
      }
      if [protocol-text] == "tcp" {
        grok {
          match => { "proto-data" => "(?:%{INT:length}|),(?:%{IP:source-address}|),(?:%{IP:destination-address}|),(?:%{INT:source-port}|),(?:%{INT:destination-port}|),(?:%{INT:data-length}|),(?:%{WORD:tcp-flags}|),(?:%{DATA:sequence-number}|),(?:%{INT:ack-number}|),(?:%{INT:tcp-window}|),(?:%{DATA:urg}|),(?:%{GREEDYDATA:tcp-options}|)" }
          remove_field => ["proto-data"]
          add_tag => ["tcp_proto_data_parsed"]
        }
      }
      if [protocol-text] == "icmp" {
        grok {
          match => { "proto-data" => "(?:%{INT:length}|),(?:%{IP:source-address}|),(?:%{IP:destination-address}|),(?:%{WORD:echo-type}|),(?:%{INT:icmp-id}|),(?:%{INT:icmp-sequence}|)" }
          match => { "proto-data" => "(?:%{INT:length}|),(?:%{IP:source-address}|),(?:%{IP:destination-address}|),(?<echo-type>timexceed|),((?<icmp-msq>[\w\d\s]+)|)" }
          remove_field => ["proto-data"]
          add_tag => ["icmp_proto_data_parsed"]
        }
      }
      geoip {
          source => "source-address"
          target => "src_ip"
          add_tag => ["geoip_added"]
      }
    }
  }
}

output {
  if "pfsense" in [tags] {
    elasticsearch {
      hosts => ["https://localhost:9200"]
      ilm_rollover_alias => "pfsense"
      ilm_pattern => "000001"
      ilm_policy => "pfsense"
      user => "logstash_writer"
      password => "{some_password}"
      cacert => "/etc/logstash/ca.crt"
    }
  }
}
